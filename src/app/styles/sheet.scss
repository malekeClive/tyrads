@use "./scss/mixins.scss" as mix;
@use "sass:map";
@use "./scss/breakpoints" as break;

.sheet-overlay {
    position: fixed;
    inset: 0px;
    z-index: 50;
    background-color: rgb(0 0 0 / 0.8);

    &[data-state="open"] {
        @include mix.animate-in();
        --enter-opacity: 0;
    }

    &[data-state="closed"] {
        @include mix.animate-out();
        --exit-opacity: 0;
    }
}

.sheet-close-container {
    position: absolute;
    right: 1rem;
    top: 1rem;
    opacity: 0.7;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    border-radius: calc(var(--radius) - 4px);

    &:hover {
        opacity: 1;
    }

    &:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
    }

    &:disabled {
        pointer-events: none;
    }
}

.close-icon {
    height: 1rem;
    width: 1rem;
}

.close-text {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
}

.sheet-base {
    position: fixed;
    z-index: 50;
    gap: 1rem;
    background-color: hsl(var(--background));
    padding: 1.5rem;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

    &[data-state="open"] {
        @include mix.animate-in();
        transition-duration: 500ms;
        animation-duration: 500ms;
    }

    &[data-state="closed"] {
        @include mix.animate-out();
        transition-duration: 300ms;
        animation-duration: 300ms;
    }

    &.variant-side-top {
        left: 0px;
        right: 0px;
        top: 0px;
        border-bottom-width: 1px;

        &[data-state="open"] {
            --enter-translate-y: -100%;
        }

        &[data-state="closed"] {
            --exit-translate-y: -100%;
        }
    }

    &.variant-side-bottom {
        left: 0px;
        right: 0px;
        bottom: 0px;
        border-top-width: 1px;

        &[data-state="open"] {
            --enter-translate-y: 100%;
        }

        &[data-state="closed"] {
            --exit-translate-y: 100%;
        }
    }

    &.variant-side-left {
        top: 0px;
        bottom: 0px;
        left: 0px;
        height: 100%;
        width: 75%;
        border-right-width: 1px;

        &[data-state="open"] {
            --enter-translate-x: -100%;
        }

        &[data-state="closed"] {
            --exit-translate-x: -100%;
        }

        @media (min-width: map.get(break.$breakpoints, "sm")) {
            max-width: 24rem;
        }
    }

    &.variant-side-right {
        top: 0px;
        bottom: 0px;
        right: 0px;
        height: 100%;
        width: 75%;
        border-left-width: 1px;

        &[data-state="open"] {
            --enter-translate-x: 100%;
        }

        &[data-state="closed"] {
            --exit-translate-x: 100%;
        }

        @media (min-width: map.get(break.$breakpoints, "sm")) {
            max-width: 24rem;
        }
    }

}

.sheet-content-close {
    @include mix.button();
    position: absolute;
    right: 1rem;
    top: 1rem;
    border-radius: calc(var(--radius) - 4px);
    opacity: 0.7;
    --ring-offset-color: hsl(var(--background));
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;

    &>svg {
        height: 1rem;
        width: 1rem;
    }

    &>span {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
    }

    &[data-state="open"] {
        background-color: hsl(var(--secondary));
    }

    &:hover {
        opacity: 1;
    }

    &:focus {
        outline: 2px solid transparent;
        outline-offset: 2px;
        --ring-color: hsl(var(--ring));
        box-shadow: var(--ring-inset) 0 0 0 calc(0.5px + var(--ring-offset-width)) var(--ring-color);
    }

    &:disabled {
        pointer-events: none;

    }

}

.sheet-title {
    font-size: 1.125rem;
    line-height: 1.75rem;
    font-weight: 600;
    color: hsl(var(--foreground));
}

.sheet-description {
    font-size: 0.875rem;
    line-height: 1.25rem;
    color: hsl(var(--muted-foreground));
}

.sheet-header-base {
    @include mix.flex(column);
    text-align: center;
    margin-top: calc(0.5rem * calc(1 - var(--space-y-reverse)));
    margin-bottom: calc(0.5rem * var(--space-y-reverse));

    @media (min-width: map.get(break.$breakpoints, "sm")) {
        text-align: left;
    }
}

.sheet-footer-base {
    display: flex;
    flex-direction: column-reverse;

    @media (min-width: map.get(break.$breakpoints, "sm")) {
        flex-direction: row;
        justify-content: flex-end;
        margin-right: calc(0.5rem * var(--space-x-reverse));
        margin-left: calc(0.5rem * calc(1 - var(--space-x-reverse)));
    }
}